
//copy from MCPlugins

buildscript {
    ext{
        Bkotlin_version = '1.3.10'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$Bkotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}

allprojects{
    group = 'cf.wayzer'
    ext{
        kotlin_version ="$Bkotlin_version"
        mc_version = '1.12-R0.1-SNAPSHOT'
        bc_version ='1.12-SNAPSHOT'
        papi_version='2.8.2'
    }
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = 1.8
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    repositories {
        mavenCentral()
        maven {
            url = "https://hub.spigotmc.org/nexus/content/groups/public/"
        }
        maven {
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
    shadowJar {
        dependencies{
            exclude dependency(":kotlin.*")
        }
    }
    processResources{
        filesMatching(["plugin.yml","bungee.yml"]){
            filter{
                it.replace("@version@", project.version.toString())
            }
        }
    }
    task buildArtifact(type: Copy){
        dependsOn shadowJar
        from jar.destinationDir
        into "$rootProject.rootDir/artifacts/"
    }
    artifacts {
        buildArtifact
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

//start

dependencies{
    compileOnly "org.spigotmc:spigot-api:$mc_version"
    compileOnly "net.md-5:bungeecord-chat:$bc_version"
    compileOnly "com.google.code.gson:gson:2.8.2"
    compileOnly files("$rootDir/lib/PowerNBT.jar")
//    compile "me.dpohvar.powernbt:PowerNBT:0.8.9.2"
}
version="1.1"
def items = subprojects[0]
task buildArtifact(type: Zip, overwrite:true){
    dependsOn items.getTasksByName("classes",false)
    dependsOn jar
    from(jar.archivePath){
        rename {"SuperItem.jar"}
    }
    archiveName ="SuperItem-${project.version}.zip"
    destinationDir =file("$rootDir/artifacts/")
}
